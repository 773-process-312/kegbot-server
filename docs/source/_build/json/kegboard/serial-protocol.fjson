{"body": "<div class=\"section\" id=\"kegboard-serial-protocol-reference\">\n<span id=\"kegboard-serial-protocol\"></span><h1>Kegboard Serial Protocol Reference<a class=\"headerlink\" href=\"#kegboard-serial-protocol-reference\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"about\">\n<h2>About<a class=\"headerlink\" href=\"#about\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>This document describes the protocol implemented in the Kegboard firmware.  The\nprotocol is a simple serial protocol for exchanging data and commands between a\nhost computer and the controller board.</p>\n<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Most users don&#8217;t need to be too familiar with the Kegboard protocol.  This\ndocument is intended for someone building a new type of controller board, or\nattempting to extend the existing board.  For example, if you build a new type\nof controller board that speaks this protocol, you should be able to use the\nrest of the Kegboard software without further modification.</p>\n</div>\n</div>\n<div class=\"section\" id=\"protocol-overview\">\n<h2>Protocol Overview<a class=\"headerlink\" href=\"#protocol-overview\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The Kegboard Serial Protocol is a binary protocol between the kegboard and the\nhost PC. Data is delivered from the board in the <strong>message frame format</strong>\n(described later). The host can also control and configure the board by sending\nmessages in the same format.</p>\n<p>Messages arrive from the board <em>asynchronously</em>; the host does not need to\nrequest updates to receive information about sensors. Similarly, the host can\nissue commands to the board at any time.</p>\n</div>\n<div class=\"section\" id=\"software-support\">\n<h2>Software Support<a class=\"headerlink\" href=\"#software-support\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The pykeg software includes libraries for reading and writing KBSP packets. A\nunittest with a sample packet capture is also included. See the code available\nin <tt class=\"docutils literal\"><span class=\"pre\">pykeg/hw/kegboard</span></tt>.</p>\n</div>\n<div class=\"section\" id=\"message-frame-format\">\n<h2>Message Frame Format<a class=\"headerlink\" href=\"#message-frame-format\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Data from the Kegboard is always sent to the host in the <cite>Kegboard Message</cite>\nframe format.  All messages take the same basic format:</p>\n<div class=\"highlight-python\"><pre>&lt;header&gt;&lt;payload&gt;&lt;footer&gt;</pre>\n</div>\n<p>A single message includes:</p>\n<ul class=\"simple\">\n<li>A 12-byte header section, identifying the message being sent.</li>\n<li>A variable-length payload section, typically in TLV (tag-length-value) format.\nThe payload can be from zero to 112 bytes in size.</li>\n<li>A 4-byte footer section, containing a CRC of the entire packet.</li>\n</ul>\n<p>Given the section sizes above, the maximum length of a complete message is 128\nbytes.</p>\n<p>Here are examples of two messages in a raw byte stream, showing two frames sent\nfrom the Kegboard to the host. For each message, the first line is a\nhuman-readable version of the message; the second line is a sequence of bytes\nforming the complete message.:</p>\n<div class=\"highlight-python\"><pre># &lt;HelloMessage: protocol_version=3&gt;\n\\x4b\\x42\\x53\\x50\\x20\\x76\\x31\\x3a\\x01\\x00\\x04\\x00\\x01\\x02\\x03\\x00\\x2e\\x54\\x0d\\x0a\n\n# &lt;MeterStatusMessage: meter_name=flow1 meter_reading=4&gt;\n\\x4b\\x42\\x53\\x50\\x20\\x76\\x31\\x3a\\x10\\x00\\x0e\\x00\\x01\\x06\\x66\\x6c\\x6f\\x77\\x31\\x00\\x02\\x04\\x04\\x00\\x00\\x00\\x55\\x0a\\x0d\\x0a</pre>\n</div>\n<div class=\"section\" id=\"header-section\">\n<h3>Header Section<a class=\"headerlink\" href=\"#header-section\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Every message begins with a fixed-length 12-byte header section. An ASCII\nrepresentation is shown below:</p>\n<div class=\"highlight-python\"><pre>0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|                            prefix (8)                         |\n|                                                               |\n+-------------------------------+-------------------------------|\n|        message_id (2)         |      payload_len (2)          |\n+-------------------------------+-------------------------------+</pre>\n</div>\n<p>The <cite>prefix</cite> field is a constant 8-byte sequence to identify the start of the\npacket. The value is always the ascii characters &#8220;<tt class=\"docutils literal\"><span class=\"pre\">KBSP</span> <span class=\"pre\">v1:</span></tt>&#8221;.  Software\nattaching to a live kegboard serial port can search for this stream of\ncharacters to determine the start of the next packet, with reasonable\nconfidence.</p>\n<p>The <cite>message_id</cite> field is the type of the message (see types defined in\n<a class=\"reference internal\" href=\"#message-types-section\"><em>Message Definitions</em></a>.)</p>\n<p>The <cite>payload_len</cite> field is the length, in bytes, of the payload section. Some\nmessages do not have a payload, in which case this section will read zero. Note\nthat this value only describes the length of the payload section (and not the\nlength of the footer section, which is constant.)</p>\n</div>\n<div class=\"section\" id=\"payload-section\">\n<h3>Payload Section<a class=\"headerlink\" href=\"#payload-section\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The payload of a message varies depending on the message type, described in\n<a class=\"reference internal\" href=\"#message-types-section\"><em>Message Definitions</em></a>.  The payload section may be empty, and has a\nmaximum length of 112 bytes.</p>\n<p>All payloads are serialized in <a class=\"reference external\" href=\"http://en.wikipedia.org/wiki/Type-length-value\">type-length-value</a> style. This format makes it\npossible to extend the body of a payload in the future with a new tag number.\nIf a message parser encounters a tag it does not recognize, it should skip over\nthe unrecognized value according to the given length.</p>\n</div>\n<div class=\"section\" id=\"footer-section\">\n<h3>Footer Section<a class=\"headerlink\" href=\"#footer-section\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Each message includes a 4-byte footer section:</p>\n<div class=\"highlight-python\"><pre>0                   1                   2                   3\n0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1\n+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+\n|           crc (2)             |         trailer (2)           |\n+-------------------------------+-------------------------------+</pre>\n</div>\n<p>The <cite>crc</cite> field is a <a class=\"reference external\" href=\"http://en.wikipedia.org/wiki/Cyclic_redundancy_check\">CRC-16-CCITT</a> of the header and\npayload fields; in other words, the entire message up to the CRC. This CRC is\nused by the host to verify the integrity of messages from the board.</p>\n<p>The integrity of a message can be verified by performing the CRC calculation on\nall data, up to and including the CRC (but not the trailer).  If correct, the\nvalue will be zero.</p>\n<p>The string <tt class=\"docutils literal\"><span class=\"pre\">\\r\\n</span></tt> is always written in the <cite>trailer</cite> field. This field is not\nincluded in the CRC.</p>\n</div>\n</div>\n<div class=\"section\" id=\"field-types\">\n<h2>Field Types<a class=\"headerlink\" href=\"#field-types\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Fields in messages are described in terms of <cite>field types</cite>, which are analogous\nto C types. Types used are described below. Note that all integer types are\nserialized in <strong>little-endian</strong> format.</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"18%\" />\n<col width=\"11%\" />\n<col width=\"71%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Type name</th>\n<th class=\"head\">Size</th>\n<th class=\"head\">Interpretation</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td><tt class=\"docutils literal\"><span class=\"pre\">int8</span></tt></td>\n<td>1</td>\n<td>8-bit signed integer (aka char)</td>\n</tr>\n<tr class=\"row-odd\"><td><tt class=\"docutils literal\"><span class=\"pre\">int16</span></tt></td>\n<td>2</td>\n<td>16-bit signed integer</td>\n</tr>\n<tr class=\"row-even\"><td><tt class=\"docutils literal\"><span class=\"pre\">int32</span></tt></td>\n<td>4</td>\n<td>32-bit signed integer</td>\n</tr>\n<tr class=\"row-odd\"><td><tt class=\"docutils literal\"><span class=\"pre\">uint8</span></tt></td>\n<td>1</td>\n<td>8-bit unsigned integer (aka uchar)</td>\n</tr>\n<tr class=\"row-even\"><td><tt class=\"docutils literal\"><span class=\"pre\">uint16</span></tt></td>\n<td>2</td>\n<td>16-bit unsigned integer</td>\n</tr>\n<tr class=\"row-odd\"><td><tt class=\"docutils literal\"><span class=\"pre\">uint32</span></tt></td>\n<td>4</td>\n<td>32-bit unsigned integer</td>\n</tr>\n<tr class=\"row-even\"><td><tt class=\"docutils literal\"><span class=\"pre\">uint64</span></tt></td>\n<td>8</td>\n<td>64-bit unsigned integer</td>\n</tr>\n<tr class=\"row-odd\"><td><tt class=\"docutils literal\"><span class=\"pre\">string</span></tt></td>\n<td>Varies</td>\n<td>Null-terminated C string</td>\n</tr>\n<tr class=\"row-even\"><td><tt class=\"docutils literal\"><span class=\"pre\">bytes</span></tt></td>\n<td>Varies</td>\n<td>Raw collection of byte values.</td>\n</tr>\n<tr class=\"row-odd\"><td><tt class=\"docutils literal\"><span class=\"pre\">output_t</span></tt></td>\n<td>1</td>\n<td>Boolean (0=disabled, 1=enabled); like <tt class=\"docutils literal\"><span class=\"pre\">uint8</span></tt></td>\n</tr>\n<tr class=\"row-even\"><td><tt class=\"docutils literal\"><span class=\"pre\">temp_t</span></tt></td>\n<td>4</td>\n<td>1/10^6 Degrees C; signed; like <tt class=\"docutils literal\"><span class=\"pre\">int32</span></tt></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"message-definitions\">\n<span id=\"message-types-section\"></span><h2>Message Definitions<a class=\"headerlink\" href=\"#message-definitions\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>This section summarizes messages which may arrive at the host from a board\nimplementing the protocol.</p>\n<div class=\"section\" id=\"hello-message-0x01\">\n<span id=\"hello-message\"></span><h3><tt class=\"docutils literal\"><span class=\"pre\">hello</span></tt> message (0x01)<a class=\"headerlink\" href=\"#hello-message-0x01\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This message may be sent by the board to indicate that it is alive. The host may\nrequest this message with the <a class=\"reference internal\" href=\"#ping-command\"><em>ping command (0x81)</em></a>.</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"12%\" />\n<col width=\"23%\" />\n<col width=\"13%\" />\n<col width=\"52%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Tag ID</th>\n<th class=\"head\">Name</th>\n<th class=\"head\">Type</th>\n<th class=\"head\">Description</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>0x01</td>\n<td>protocol_version</td>\n<td>uint16</td>\n<td>Supported version of kegboard\nserial protocol.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"board-configuration-message-0x02\">\n<span id=\"board-configuration-message\"></span><h3><tt class=\"docutils literal\"><span class=\"pre\">board_configuration</span></tt> message (0x02)<a class=\"headerlink\" href=\"#board-configuration-message-0x02\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>A configuration message dumps the board&#8217;s configuration data.  These values can\nbe programmed by sending a <em class=\"xref std std-ref\">set-configuration-command</em> with the same message\nas payload.</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"12%\" />\n<col width=\"26%\" />\n<col width=\"13%\" />\n<col width=\"50%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Tag ID</th>\n<th class=\"head\">Name</th>\n<th class=\"head\">Type</th>\n<th class=\"head\">Description</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>0x01</td>\n<td>board_name</td>\n<td>string</td>\n<td>Board descriptive name.</td>\n</tr>\n<tr class=\"row-odd\"><td>0x02</td>\n<td>baud_rate</td>\n<td>uint16</td>\n<td>Serial port speed, in bits per second</td>\n</tr>\n<tr class=\"row-even\"><td>0x03</td>\n<td>update_interval</td>\n<td>uint16</td>\n<td>Time in milliseconds between update\nmessages to the host.</td>\n</tr>\n<tr class=\"row-odd\"><td>0x04</td>\n<td>watchdog_timeout</td>\n<td>uint16</td>\n<td>Maximum time permitted between\ncommands from host before triggering\nthe watchdog alarm.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"meter-status-message-0x10\">\n<span id=\"meter-status-message\"></span><h3><tt class=\"docutils literal\"><span class=\"pre\">meter_status</span></tt> message (0x10)<a class=\"headerlink\" href=\"#meter-status-message-0x10\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This message describes the instantaneous reading of a single flow meter channel.\nFor a kegboard with multiple flow meter inputs, multiple messages will be sent.</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"12%\" />\n<col width=\"23%\" />\n<col width=\"13%\" />\n<col width=\"52%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Tag ID</th>\n<th class=\"head\">Name</th>\n<th class=\"head\">Type</th>\n<th class=\"head\">Description</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>0x01</td>\n<td>meter_name</td>\n<td>string</td>\n<td>Name of the meter reporting flow.</td>\n</tr>\n<tr class=\"row-odd\"><td>0x02</td>\n<td>meter_reading</td>\n<td>uint32</td>\n<td>Total volume, in ticks.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"temperature-reading-message-0x11\">\n<span id=\"temperature-reading-message\"></span><h3><tt class=\"docutils literal\"><span class=\"pre\">temperature_reading</span></tt> message (0x11)<a class=\"headerlink\" href=\"#temperature-reading-message-0x11\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This message describes the instantaneous reading of a single temperature sensor.\nFor a kegboard with multiple sensors, multiple messages may be sent.  Note that\nthe temperature is presumed to be valid at the time the message is sent.</p>\n<p>The value of <tt class=\"docutils literal\"><span class=\"pre\">sensor_name</span></tt> will include the full 128-bit 1-wire device id, for\nexample, <tt class=\"docutils literal\"><span class=\"pre\">thermo-f800080012345610</span></tt>.</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"12%\" />\n<col width=\"23%\" />\n<col width=\"13%\" />\n<col width=\"52%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Tag ID</th>\n<th class=\"head\">Name</th>\n<th class=\"head\">Type</th>\n<th class=\"head\">Description</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>0x01</td>\n<td>sensor_name</td>\n<td>string</td>\n<td>Name of the sensor being repoted.</td>\n</tr>\n<tr class=\"row-odd\"><td>0x02</td>\n<td>sensor_reading</td>\n<td>temp_t</td>\n<td>Temperature at the sensor.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"output-status-message-0x12\">\n<span id=\"output-status-message\"></span><h3><tt class=\"docutils literal\"><span class=\"pre\">output_status</span></tt> message (0x12)<a class=\"headerlink\" href=\"#output-status-message-0x12\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This message describes the status of a single general-purpose output on the\nboard.  An output could be connected a relay, or some other device to control\nvalves.</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"12%\" />\n<col width=\"23%\" />\n<col width=\"13%\" />\n<col width=\"52%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Tag ID</th>\n<th class=\"head\">Name</th>\n<th class=\"head\">Type</th>\n<th class=\"head\">Description</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>0x01</td>\n<td>output_name</td>\n<td>string</td>\n<td>Name of the output being reported.</td>\n</tr>\n<tr class=\"row-odd\"><td>0x02</td>\n<td>output_reading</td>\n<td>output_t</td>\n<td>Status of the output.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div class=\"section\" id=\"auth-token-message-0x14\">\n<span id=\"auth-token-message\"></span><h3><tt class=\"docutils literal\"><span class=\"pre\">auth_token</span></tt> message (0x14)<a class=\"headerlink\" href=\"#auth-token-message-0x14\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>When an authentication token is attached or removed from the kegboard, this\nmessages is sent.  The <tt class=\"docutils literal\"><span class=\"pre\">device_name</span></tt> field gives the name of the kegboard\nperipheral producing the message; this will be <cite>onewire</cite> for iButtons and\n<tt class=\"docutils literal\"><span class=\"pre\">rfid</span></tt> for RFIDs.  The <tt class=\"docutils literal\"><span class=\"pre\">token</span></tt> field gives the raw, big-endian byte value of\nthe token.</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"12%\" />\n<col width=\"23%\" />\n<col width=\"13%\" />\n<col width=\"52%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Tag ID</th>\n<th class=\"head\">Name</th>\n<th class=\"head\">Type</th>\n<th class=\"head\">Description</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>0x01</td>\n<td>device_name</td>\n<td>string</td>\n<td>Name of authentication device.</td>\n</tr>\n<tr class=\"row-odd\"><td>0x02</td>\n<td>token</td>\n<td>bytes</td>\n<td>Raw token ID being reported.</td>\n</tr>\n<tr class=\"row-even\"><td>0x03</td>\n<td>status</td>\n<td>uint8</td>\n<td>1 if present, 0 if removed.</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div class=\"section\" id=\"command-definitions\">\n<h2>Command Definitions<a class=\"headerlink\" href=\"#command-definitions\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>This section summarizes messages which may be sent to a host implementing the\nprotocol.</p>\n<div class=\"section\" id=\"ping-command-0x81\">\n<span id=\"ping-command\"></span><h3><tt class=\"docutils literal\"><span class=\"pre\">ping</span></tt> command (0x81)<a class=\"headerlink\" href=\"#ping-command-0x81\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This command is sent to the board to request a <a class=\"reference internal\" href=\"#hello-message\"><em>hello message (0x01)</em></a>.  This can be\nused to verify that the attached device is a Kegboard that speaks the serial\nprotocol.</p>\n<p>There is no payload.</p>\n</div>\n<div class=\"section\" id=\"set-output-command-0x84\">\n<h3><tt class=\"docutils literal\"><span class=\"pre\">set_output</span></tt> command (0x84)<a class=\"headerlink\" href=\"#set-output-command-0x84\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>This command is sent to the board to enable or disable a device output.</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"12%\" />\n<col width=\"23%\" />\n<col width=\"13%\" />\n<col width=\"52%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Tag ID</th>\n<th class=\"head\">Name</th>\n<th class=\"head\">Type</th>\n<th class=\"head\">Description</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>0x01</td>\n<td>output_id</td>\n<td>uint8_t</td>\n<td>Numerical output id (0-15).</td>\n</tr>\n<tr class=\"row-odd\"><td>0x02</td>\n<td>output_mode</td>\n<td>output_t</td>\n<td>Mode to set the output.</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div class=\"section\" id=\"protocol-revision-history\">\n<h2>Protocol Revision History<a class=\"headerlink\" href=\"#protocol-revision-history\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>This section describes major updates to this protocol.</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"12%\" />\n<col width=\"22%\" />\n<col width=\"66%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Version</th>\n<th class=\"head\">Date</th>\n<th class=\"head\">Remarks</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>1</td>\n<td>current</td>\n<td>Initial version.</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n", "display_toc": true, "title": "Kegboard Serial Protocol Reference", "sourcename": "kegboard/serial-protocol.txt", "customsidebar": null, "current_page_name": "kegboard/serial-protocol", "next": {"link": "../../api/", "title": "Kegbot API Guide"}, "rellinks": [["genindex", "General Index", "I", "index"], ["api/index", "Kegbot API Guide", "N", "next"], ["kegboard/wiring", "Wiring Up a Kegboard", "P", "previous"]], "meta": {}, "parents": [{"link": "../", "title": "Kegboard Guide"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Kegboard Serial Protocol Reference</a><ul>\n<li><a class=\"reference internal\" href=\"#about\">About</a></li>\n<li><a class=\"reference internal\" href=\"#protocol-overview\">Protocol Overview</a></li>\n<li><a class=\"reference internal\" href=\"#software-support\">Software Support</a></li>\n<li><a class=\"reference internal\" href=\"#message-frame-format\">Message Frame Format</a><ul>\n<li><a class=\"reference internal\" href=\"#header-section\">Header Section</a></li>\n<li><a class=\"reference internal\" href=\"#payload-section\">Payload Section</a></li>\n<li><a class=\"reference internal\" href=\"#footer-section\">Footer Section</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#field-types\">Field Types</a></li>\n<li><a class=\"reference internal\" href=\"#message-definitions\">Message Definitions</a><ul>\n<li><a class=\"reference internal\" href=\"#hello-message-0x01\"><tt class=\"docutils literal\"><span class=\"pre\">hello</span></tt> message (0x01)</a></li>\n<li><a class=\"reference internal\" href=\"#board-configuration-message-0x02\"><tt class=\"docutils literal\"><span class=\"pre\">board_configuration</span></tt> message (0x02)</a></li>\n<li><a class=\"reference internal\" href=\"#meter-status-message-0x10\"><tt class=\"docutils literal\"><span class=\"pre\">meter_status</span></tt> message (0x10)</a></li>\n<li><a class=\"reference internal\" href=\"#temperature-reading-message-0x11\"><tt class=\"docutils literal\"><span class=\"pre\">temperature_reading</span></tt> message (0x11)</a></li>\n<li><a class=\"reference internal\" href=\"#output-status-message-0x12\"><tt class=\"docutils literal\"><span class=\"pre\">output_status</span></tt> message (0x12)</a></li>\n<li><a class=\"reference internal\" href=\"#auth-token-message-0x14\"><tt class=\"docutils literal\"><span class=\"pre\">auth_token</span></tt> message (0x14)</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#command-definitions\">Command Definitions</a><ul>\n<li><a class=\"reference internal\" href=\"#ping-command-0x81\"><tt class=\"docutils literal\"><span class=\"pre\">ping</span></tt> command (0x81)</a></li>\n<li><a class=\"reference internal\" href=\"#set-output-command-0x84\"><tt class=\"docutils literal\"><span class=\"pre\">set_output</span></tt> command (0x84)</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#protocol-revision-history\">Protocol Revision History</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../wiring/", "title": "Wiring Up a Kegboard"}, "metatags": ""}