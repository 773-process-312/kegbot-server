{"body": "<div class=\"section\" id=\"theory-of-operation\">\n<h1>Theory of Operation<a class=\"headerlink\" href=\"#theory-of-operation\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>This chapter describes the internal design of the Kegboard firmware and how it\nmanages connected sensors.  If you&#8217;re not interested, you can safely skip to the\nnext chapter.</p>\n<div class=\"section\" id=\"main-event-loop\">\n<h2>Main event loop<a class=\"headerlink\" href=\"#main-event-loop\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Kegboard&#8217;s two principle responsibilities are:</p>\n<ul class=\"simple\">\n<li>Monitors and report status and events from attached sensors.</li>\n<li>Accept commands from the host to enable and disable output relays.</li>\n</ul>\n<p>When the board is powered, it immediately begins listening to sensors and\nsending events on the serial port.  If temperature sensing is enabled, the board\nalso periodically polls attached sensors.  Additionally, the host can send\ncommands the board at any time.  (Commands and events are detailed in\n<a class=\"reference internal\" href=\"../serial-protocol/#kegboard-serial-protocol\"><em>Kegboard Serial Protocol Reference</em></a>.)</p>\n</div>\n<div class=\"section\" id=\"flow-sensing\">\n<h2>Flow sensing<a class=\"headerlink\" href=\"#flow-sensing\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Each flow meter is connected to one of the Arduino&#8217;s external interrupt pins.\nOn a normal Arduino, these are pins 2 and 3.</p>\n<p>Kegboard supports &#8220;open collector&#8221; flow meters.  These meters are typically\nbuilt using hall effect sensors.  As liquid passes through the meter, a series\nof pulses is emitted on its output pin.</p>\n<p>Every pulse emitted by the meter corresponds to the same fixed volume of fluid,\ntherefore volume is determined simply by counting the pulses.  The exact volume\nof a pulse is a physical property of the meter; the popular Vision 2000 meter\npulses 2200 times per liter.</p>\n<p>In the interrupt service routine for each of these pins, Kegboard increments a\ncounter every time there is a pulse, keeping a running total of each meter&#8217;s\nvolume (similar to an odometer).</p>\n</div>\n<div class=\"section\" id=\"onewire-presence-and-temperature-sensing\">\n<h2>OneWire presence and temperature sensing<a class=\"headerlink\" href=\"#onewire-presence-and-temperature-sensing\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>The Kegboard firmware supports two distinct OneWire (1-wire) sensor busses: the\n&#8220;thermo&#8221; bus, and the &#8220;presence&#8221; bus.</p>\n<p>The &#8220;thermo&#8221; bus supports reading Dallas/Maxim DS18B20 and 18S20 OneWire\ntemperature sensors.  This bus is reserved exclusively for temperature sensors;\nOneWire devices not matching the DS18B20 or DS18S20 family codes will be ignored\non this bus.  Any number of sensors may be attached.</p>\n<p>The firmware also supports a second OneWire bus, which is continuously polled\nfor OneWire devices.  Whenever a OneWire device such as an iButton is connected,\nits unique 64-bit OneWire device ID is reported as an authentication token using\n<a class=\"reference internal\" href=\"../serial-protocol/#kegboard-serial-protocol\"><em>Kegboard Serial Protocol Reference</em></a>.</p>\n</div>\n<div class=\"section\" id=\"relays\">\n<h2>Relays<a class=\"headerlink\" href=\"#relays\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>When a relay is enabled, Kegboard enables the corresponding output and starts a\ntimer.  If the host has not re-activated the relay within that timer, Kegboard\nautomatically deactivated the output.  This prevents prolonged relay operation\nif the host crashes unexpectedly.</p>\n</div>\n<div class=\"section\" id=\"piezo-buzzer\">\n<h2>Piezo buzzer<a class=\"headerlink\" href=\"#piezo-buzzer\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>A low-cost piezo buzzer can be connected to the <a class=\"reference internal\" href=\"../wiring/#pin-connections\"><em>buzzer output pin</em></a>.  When connected, Kegboard will serenade you with some sweet\ntunes.</p>\n<table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"29%\" />\n<col width=\"71%\" />\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Event</th>\n<th class=\"head\">Sound</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td>Board power up</td>\n<td>Short musical tune (10 notes).</td>\n</tr>\n<tr class=\"row-odd\"><td>Auth Token Added</td>\n<td>Three-tone &#8220;added&#8221; sound.</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n", "display_toc": true, "title": "Theory of Operation", "sourcename": "kegboard/operation.txt", "customsidebar": null, "current_page_name": "kegboard/operation", "next": {"link": "../firmware/", "title": "Kegboard Firmware"}, "rellinks": [["genindex", "General Index", "I", "index"], ["kegboard/firmware", "Kegboard Firmware", "N", "next"], ["kegboard/overview", "Kegboard Overview", "P", "previous"]], "meta": {}, "parents": [{"link": "../", "title": "Kegboard Guide"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Theory of Operation</a><ul>\n<li><a class=\"reference internal\" href=\"#main-event-loop\">Main event loop</a></li>\n<li><a class=\"reference internal\" href=\"#flow-sensing\">Flow sensing</a></li>\n<li><a class=\"reference internal\" href=\"#onewire-presence-and-temperature-sensing\">OneWire presence and temperature sensing</a></li>\n<li><a class=\"reference internal\" href=\"#relays\">Relays</a></li>\n<li><a class=\"reference internal\" href=\"#piezo-buzzer\">Piezo buzzer</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../overview/", "title": "Kegboard Overview"}, "metatags": ""}