{"body": "<div class=\"section\" id=\"pycore-overview\">\n<h1>Pycore Overview<a class=\"headerlink\" href=\"#pycore-overview\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"architecture\">\n<h2>Architecture<a class=\"headerlink\" href=\"#architecture\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"figure\">\n<img alt=\"../../_images/pycore-architecture.png\" src=\"../../_images/pycore-architecture.png\" />\n</div>\n<p>Pycore consists of a single master program, <strong>Kegbot Core</strong>, and a collection of\naccessory programs which talk to it.</p>\n<div class=\"section\" id=\"kegbot-core\">\n<h3>Kegbot Core<a class=\"headerlink\" href=\"#kegbot-core\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>Kegbot Core (<tt class=\"docutils literal\"><span class=\"pre\">kegbot_core.py</span></tt>) is the central dispatcher of a Pycore system.\nIt is the interface between the various accessory programs and the Kegbot\nServer.</p>\n<p>Kegbot Core doesn&#8217;t do anything by itself; it needs to receive sensor and\nauthentication information from another program.  Once it does, the core\nimplements all of the policy and business logic of a Kegbot system.</p>\n<p>Main responsibilities of the Kegbot Core:</p>\n<ul class=\"simple\">\n<li>Sums flow sensor information into discrete drink events, which are then\nreported to the Kegbot Server;</li>\n<li>Processes authentication packets and decides whether to start a new flow;</li>\n<li>Sends messages to the Kegboard daemon in order to open and close valves;</li>\n<li>Sends flow-related events to connected accessory daemons while a pour is in\nprogress, for instance to update the UI showing on the LCD;</li>\n<li>Interprets temperature sensor data and sends it to the Kegbot Server.</li>\n</ul>\n</div>\n<div class=\"section\" id=\"kegnet-local-api\">\n<h3>Kegnet Local API<a class=\"headerlink\" href=\"#kegnet-local-api\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>All accessory daemons communicate with the Kegbot Core using the Kegnet Local\nAPI, a TCP protocol.</p>\n<p>While you&#8217;d usually just run all accessory daemons on the same machine, this\nprotocol makes it possible to distribute Kegbot responsibilities across multiple\ndevices.</p>\n<p>For developers, the Kegnet Local API means you can build new types of services\nfor Kegbot.  For example, you can write your own program to talk to a new\nauthentication device and provide its data the rest of the Kegbot system.</p>\n</div>\n<div class=\"section\" id=\"kegboard-daemon\">\n<h3>Kegboard Daemon<a class=\"headerlink\" href=\"#kegboard-daemon\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<p>The Kegboard daemon attaches to a serial port, decodes incoming Kegboard\npackets, and sends them onward to the Core for interpretation.</p>\n<p>As shown in the diagram, you can actually run multiple instances of this\nprogram, each one talking to its own Kegboard.  This is one way to scale up your\nKegbot system if you want to support many taps, or taps in different phyiscal\nlocations.</p>\n</div>\n</div>\n<div class=\"section\" id=\"life-of-a-pour\">\n<h2>Life of a Pour<a class=\"headerlink\" href=\"#life-of-a-pour\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Here&#8217;s an example of what happens when you swipe an RFID across Kegboard&#8217;s RFID\nreader and start a pour:</p>\n<ol class=\"arabic simple\">\n<li>The Kegboard firmware reads the RFID sensor and sends an\n<a class=\"reference internal\" href=\"../../kegboard/serial-protocol/#auth-token-message\"><em>Auth Token message</em></a> across the serial port.</li>\n<li>The Kegboard daemon reads the raw packet off the serial port, decodes the\nindividual fields, and sends a Kegnet message up to the Core.</li>\n<li>The Core looks up the token (against the Kegbot Server REST API) and decides\nwhether a new flow should be started for it.</li>\n<li>If the token was authorized, Core sends a message down to the Kegboard daemon\nto open the tap&#8217;s valve.  (If the tap doesn&#8217;t have a valve, this message does\nnothing.)</li>\n<li>The user starts pouring and periodic meter reading messages are sent up to\nthe Core.</li>\n<li>After the flow becomes idle or the user disconnects the auth token, Core\ncloses the valve and records a new drink against the server.</li>\n</ol>\n</div>\n</div>\n", "display_toc": true, "title": "Pycore Overview", "sourcename": "pycore-guide/overview.txt", "customsidebar": null, "current_page_name": "pycore-guide/overview", "next": {"link": "../install-pycore/", "title": "Install Pycore"}, "rellinks": [["genindex", "General Index", "I", "index"], ["pycore-guide/install-pycore", "Install Pycore", "N", "next"], ["pycore-guide/index", "Pycore Guide", "P", "previous"]], "meta": {}, "parents": [{"link": "../", "title": "Pycore Guide"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Pycore Overview</a><ul>\n<li><a class=\"reference internal\" href=\"#architecture\">Architecture</a><ul>\n<li><a class=\"reference internal\" href=\"#kegbot-core\">Kegbot Core</a></li>\n<li><a class=\"reference internal\" href=\"#kegnet-local-api\">Kegnet Local API</a></li>\n<li><a class=\"reference internal\" href=\"#kegboard-daemon\">Kegboard Daemon</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#life-of-a-pour\">Life of a Pour</a></li>\n</ul>\n</li>\n</ul>\n", "prev": {"link": "../", "title": "Pycore Guide"}, "metatags": ""}