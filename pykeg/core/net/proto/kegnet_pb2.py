# Generated by the protocol buffer compiler.  DO NOT EDIT!

from google.protobuf import descriptor
from google.protobuf import message
from google.protobuf import reflection
from google.protobuf import service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2


_STATUSREPLY_STATUSCODE = descriptor.EnumDescriptor(
  name='StatusCode',
  full_name='StatusReply.StatusCode',
  filename='StatusCode',
  values=[
    descriptor.EnumValueDescriptor(
      name='OK', index=0, number=200,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='ERROR', index=1, number=400,
      options=None,
      type=None),
  ],
  options=None,
)

_OUTPUTSTATUS_STATUS = descriptor.EnumDescriptor(
  name='Status',
  full_name='OutputStatus.Status',
  filename='Status',
  values=[
    descriptor.EnumValueDescriptor(
      name='DISABLED', index=0, number=0,
      options=None,
      type=None),
    descriptor.EnumValueDescriptor(
      name='ENABLED', index=1, number=1,
      options=None,
      type=None),
  ],
  options=None,
)


_STATUSREPLY = descriptor.Descriptor(
  name='StatusReply',
  full_name='StatusReply',
  filename='kegnet.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='code', full_name='StatusReply.code', index=0,
      number=1, type=14, cpp_type=8, label=2,
      default_value=200,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='description', full_name='StatusReply.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
    _STATUSREPLY_STATUSCODE,
  ],
  options=None)


_PINGMESSAGE = descriptor.Descriptor(
  name='PingMessage',
  full_name='PingMessage',
  filename='kegnet.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='seqn', full_name='PingMessage.seqn', index=0,
      number=1, type=7, cpp_type=3, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_CHANNELINFO = descriptor.Descriptor(
  name='ChannelInfo',
  full_name='ChannelInfo',
  filename='kegnet.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='name', full_name='ChannelInfo.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_FLOWCHANNELREQUEST = descriptor.Descriptor(
  name='FlowChannelRequest',
  full_name='FlowChannelRequest',
  filename='kegnet.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='handle', full_name='FlowChannelRequest.handle', index=0,
      number=1, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='channel_info', full_name='FlowChannelRequest.channel_info', index=1,
      number=2, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_METERREADING = descriptor.Descriptor(
  name='MeterReading',
  full_name='MeterReading',
  filename='kegnet.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='handle', full_name='MeterReading.handle', index=0,
      number=1, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='name', full_name='MeterReading.name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='value', full_name='MeterReading.value', index=2,
      number=3, type=13, cpp_type=3, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_THERMOREADING = descriptor.Descriptor(
  name='ThermoReading',
  full_name='ThermoReading',
  filename='kegnet.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='handle', full_name='ThermoReading.handle', index=0,
      number=1, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='name', full_name='ThermoReading.name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='value', full_name='ThermoReading.value', index=2,
      number=3, type=13, cpp_type=3, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_OUTPUTSTATUS = descriptor.Descriptor(
  name='OutputStatus',
  full_name='OutputStatus',
  filename='kegnet.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='handle', full_name='OutputStatus.handle', index=0,
      number=1, type=11, cpp_type=10, label=2,
      default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='name', full_name='OutputStatus.name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='status', full_name='OutputStatus.status', index=2,
      number=3, type=14, cpp_type=8, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
    _OUTPUTSTATUS_STATUS,
  ],
  options=None)


_CLIENTHANDLE = descriptor.Descriptor(
  name='ClientHandle',
  full_name='ClientHandle',
  filename='kegnet.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='client_name', full_name='ClientHandle.client_name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_FLOWCREDENTIALS = descriptor.Descriptor(
  name='FlowCredentials',
  full_name='FlowCredentials',
  filename='kegnet.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='username', full_name='FlowCredentials.username', index=0,
      number=1, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='channel_name', full_name='FlowCredentials.channel_name', index=1,
      number=2, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='valid_seconds', full_name='FlowCredentials.valid_seconds', index=2,
      number=3, type=13, cpp_type=3, label=2,
      default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_FLOWDEVICE = descriptor.Descriptor(
  name='FlowDevice',
  full_name='FlowDevice',
  filename='kegnet.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='device_name', full_name='FlowDevice.device_name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='ticks_per_liter', full_name='FlowDevice.ticks_per_liter', index=1,
      number=2, type=13, cpp_type=3, label=2,
      default_value=2200,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_THERMODEVICE = descriptor.Descriptor(
  name='ThermoDevice',
  full_name='ThermoDevice',
  filename='kegnet.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='device_name', full_name='ThermoDevice.device_name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='lower_bound_mdegc', full_name='ThermoDevice.lower_bound_mdegc', index=1,
      number=2, type=5, cpp_type=1, label=2,
      default_value=-55000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='upper_bound_mdegc', full_name='ThermoDevice.upper_bound_mdegc', index=2,
      number=3, type=5, cpp_type=1, label=2,
      default_value=125000,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_OUTPUTDEVICE = descriptor.Descriptor(
  name='OutputDevice',
  full_name='OutputDevice',
  filename='kegnet.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='device_name', full_name='OutputDevice.device_name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_CLIENTCONFIG = descriptor.Descriptor(
  name='ClientConfig',
  full_name='ClientConfig',
  filename='kegnet.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='client_name', full_name='ClientConfig.client_name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      default_value=unicode("", "utf-8"),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='flow_device_list', full_name='ClientConfig.flow_device_list', index=1,
      number=2, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='thermo_device_list', full_name='ClientConfig.thermo_device_list', index=2,
      number=3, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    descriptor.FieldDescriptor(
      name='output_device_list', full_name='ClientConfig.output_device_list', index=3,
      number=4, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_CORESTATE = descriptor.Descriptor(
  name='CoreState',
  full_name='CoreState',
  filename='kegnet.proto',
  containing_type=None,
  fields=[
    descriptor.FieldDescriptor(
      name='client_list', full_name='CoreState.client_list', index=0,
      number=1, type=11, cpp_type=10, label=3,
      default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],  # TODO(robinson): Implement.
  enum_types=[
  ],
  options=None)


_STATUSREPLY.fields_by_name['code'].enum_type = _STATUSREPLY_STATUSCODE
_FLOWCHANNELREQUEST.fields_by_name['handle'].message_type = _CLIENTHANDLE
_FLOWCHANNELREQUEST.fields_by_name['channel_info'].message_type = _CHANNELINFO
_METERREADING.fields_by_name['handle'].message_type = _CLIENTHANDLE
_THERMOREADING.fields_by_name['handle'].message_type = _CLIENTHANDLE
_OUTPUTSTATUS.fields_by_name['handle'].message_type = _CLIENTHANDLE
_OUTPUTSTATUS.fields_by_name['status'].enum_type = _OUTPUTSTATUS_STATUS
_CLIENTCONFIG.fields_by_name['flow_device_list'].message_type = _FLOWDEVICE
_CLIENTCONFIG.fields_by_name['thermo_device_list'].message_type = _THERMODEVICE
_CLIENTCONFIG.fields_by_name['output_device_list'].message_type = _OUTPUTDEVICE
_CORESTATE.fields_by_name['client_list'].message_type = _CLIENTCONFIG

class StatusReply(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _STATUSREPLY

class PingMessage(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _PINGMESSAGE

class ChannelInfo(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CHANNELINFO

class FlowChannelRequest(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _FLOWCHANNELREQUEST

class MeterReading(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _METERREADING

class ThermoReading(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _THERMOREADING

class OutputStatus(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _OUTPUTSTATUS

class ClientHandle(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CLIENTHANDLE

class FlowCredentials(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _FLOWCREDENTIALS

class FlowDevice(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _FLOWDEVICE

class ThermoDevice(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _THERMODEVICE

class OutputDevice(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _OUTPUTDEVICE

class ClientConfig(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CLIENTCONFIG

class CoreState(message.Message):
  __metaclass__ = reflection.GeneratedProtocolMessageType
  DESCRIPTOR = _CORESTATE


_CORE = descriptor.ServiceDescriptor(
  name='Core',
  full_name='Core',
  index=0,
  options=None,
  methods=[
  descriptor.MethodDescriptor(
    name='Login',
    full_name='Core.Login',
    index=0,
    containing_service=None,
    input_type=_CLIENTCONFIG,
    output_type=_CLIENTHANDLE,
    options=None,
  ),
  descriptor.MethodDescriptor(
    name='Logout',
    full_name='Core.Logout',
    index=1,
    containing_service=None,
    input_type=_CLIENTHANDLE,
    output_type=_STATUSREPLY,
    options=None,
  ),
  descriptor.MethodDescriptor(
    name='PostMeterReading',
    full_name='Core.PostMeterReading',
    index=2,
    containing_service=None,
    input_type=_METERREADING,
    output_type=_STATUSREPLY,
    options=None,
  ),
  descriptor.MethodDescriptor(
    name='PostOutputStatus',
    full_name='Core.PostOutputStatus',
    index=3,
    containing_service=None,
    input_type=_OUTPUTSTATUS,
    output_type=_STATUSREPLY,
    options=None,
  ),
  descriptor.MethodDescriptor(
    name='PostThermalReading',
    full_name='Core.PostThermalReading',
    index=4,
    containing_service=None,
    input_type=_THERMOREADING,
    output_type=_STATUSREPLY,
    options=None,
  ),
  descriptor.MethodDescriptor(
    name='StartFlow',
    full_name='Core.StartFlow',
    index=5,
    containing_service=None,
    input_type=_FLOWCHANNELREQUEST,
    output_type=_STATUSREPLY,
    options=None,
  ),
  descriptor.MethodDescriptor(
    name='StopFlow',
    full_name='Core.StopFlow',
    index=6,
    containing_service=None,
    input_type=_FLOWCHANNELREQUEST,
    output_type=_STATUSREPLY,
    options=None,
  ),
])

class Core(service.Service):
  __metaclass__ = service_reflection.GeneratedServiceType
  DESCRIPTOR = _CORE
class Core_Stub(Core):
  __metaclass__ = service_reflection.GeneratedServiceStubType
  DESCRIPTOR = _CORE

